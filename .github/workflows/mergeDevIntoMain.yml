name: mergeDevIntoMain

on:
  workflow_dispatch:
  push:
    branches: ["development"]


env:
  # replace "github_username" with your GitHub username
  # replace "github.com/username/repo.git" with your GitHub repo path
  # do NOT replace ${{secrets.GITHUB_TOKEN}}, GitHub will take care of it
  # MY_REPO: https://github_username:${{secrets.GITHUB_TOKEN}}@github.com/username/repo.git
  MY_REPO: https://jeffreyally:${{secrets.GITHUB_TOKEN}}@github.com/jeffreyally/javaparser-maven-sample.git

  # replace "long-lived_branch_name" with your branch name
  MY_BRANCH: development

  # replace it with the path to master repo - https://github.com/username/master_repo.git 
  MASTER_REPO: https://github.com/jeffreyally/javaparser-maven-sample.git

  # replace "master" with your master branch name
  MASTER_BRANCH: master

jobs:
  merge:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
          java-version: '8'
          distribution: 'corretto'
          cache: maven
    - name: Java and Maven Version
      
      
      run: java -version && mvn -v
 
      
      
      
    - name: Merge development into master
      run: |
        git clone ${{env.MY_REPO}} -b ${{env.MASTER_BRANCH}} tmpMaster
        cd tmpMaster
        ls -l
        git config user.name "Automerge Bot"
        git config user.email "bot@example.com"
        git config pull.rebase false
        git pull ${{env.MASTER_REPO}} ${{env.MY_BRANCH}}
        git branch -a
        temp=$(grep -P -o -m 1 "\d.\d.*-SNAPSHOT" ./pom.xml | head -1)
        echo "$temp"
        find ./ -name "pom.xml" -exec sed -i "0,/"$temp"/{s/"$temp"/"${temp%-SNAPSHOT}"/}" {} \;
        cat pom.xml
        git add .  
        git commit -m 'mergeDevIntoMain.yml GitHub Actions'
        git push
      
    
    - name: Merge master into development
      run: |
        git clone ${{env.MY_REPO}} -b ${{env.MY_BRANCH}} tmpDev
        cd tmpDev
        ls -l
        git config user.name "Automerge Bot"
        git config user.email "bot@example.com"
        git config pull.rebase false
        git pull ${{env.MASTER_REPO}} ${{env.MASTER_BRANCH}}
        git branch -a
        temp=$(grep -P -o -m 1 "(?<=version\>)[^<]+" ./pom.xml | head -1)
        echo "$temp"
        find ./ -name "pom*" -exec sed -i "0,/"$temp"/{s/"$temp"/"${temp}-SNAPSHOT"/}" {} \;
        mvn --batch-mode release:update-versions
        cat pom.xml
        git add .  
        git status
        git commit -m 'mergeDevIntoMain.yml GitHub Actions'
        git push
